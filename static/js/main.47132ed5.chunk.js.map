{"version":3,"sources":["services/AlbumService.js","components/ListAlbumComponent.jsx","components/HeaderComponent.jsx","components/FooterComponent.jsx","components/CreateAlbumComponent.jsx","components/ViewAlbumComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["ALBUM_API_BASE_URL","album","axios","post","albumId","get","delete","put","ListAlbumComponent","props","state","albums","addAlbum","bind","editAlbum","deleteAlbum","id","AlbumService","then","res","setState","filter","this","history","push","getAllAlbums","data","className","onClick","map","albumName","artistName","genre","releaseYear","style","marginLeft","viewAlbum","Component","HeaderComponent","href","FooterComponent","CreateAlbumComponent","saveOrUpdateAlbum","e","preventDefault","console","log","JSON","stringify","updateAlbum","changeAlbumNameHandler","event","target","value","changeArtistNameHandler","changeGenreHandler","changeReleaseYearHandler","match","params","getAlbumById","getTitle","placeholder","name","onChange","cancel","ViewAlbumComponent","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47132ed5.chunk.js","sourcesContent":["import axios from 'axios'; \n\nconst ALBUM_API_BASE_URL = \"http://albumcrudtest3-env.eba-ubhrhzmu.us-east-1.elasticbeanstalk.com\"; \n\nclass AlbumService { \n\n    addAlbum(album) {\n        return axios.post(ALBUM_API_BASE_URL + '/saveAlbum', album); \n    }\n\n    getAlbumById(albumId) {\n        return axios.get(ALBUM_API_BASE_URL + '/getAlbum/' + albumId); \n    }\n\n    getAllAlbums() {\n        return axios.get(ALBUM_API_BASE_URL + '/getAllAlbums'); \n    }\n\n    deleteAlbum(album) { // USING ALBUM INSTEAD OF ALBUMID\n        return axios.delete(ALBUM_API_BASE_URL + '/deleteAlbum', album); \n    }\n\n    updateAlbum(album) { // NOT USING ALBUMID - DOES IT MATTER THAT THERE'S NO ID IN THE PATH? \n        return axios.put(ALBUM_API_BASE_URL + '/updateAlbum', album);  \n    }\n\n}\n\nexport default new AlbumService()","import React, { Component } from 'react'\nimport AlbumService from '../services/AlbumService'\n\nclass ListAlbumComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            albums: []\n        }\n\n        this.addAlbum = this.addAlbum.bind(this); \n        this.editAlbum = this.editAlbum.bind(this); \n        this.deleteAlbum = this.deleteAlbum.bind(this); \n    }\n\n    deleteAlbum(id) { // USING ALBUM INSTEAD OF ALBUMID ?????????????????????????\n        AlbumService.deleteAlbum(id).then( res => { // res is the HTTP response\n            this.setState({albums: this.state.albums.filter(album => album.id !== id)})\n        }); \n    }\n\n    viewAlbum(id) {\n        this.props.history.push(`/crud-frontend/view-album/${id}`); \n    }\n\n    addAlbum() {\n        this.props.history.push('/crud-frontend/add-album/_add'); \n    }\n\n    editAlbum(id) { // EDITING ALBUM BY ID??? \n        this.props.history.push(`/crud-frontend/add-album/${id}`); \n    }\n\n    componentDidMount() {\n        AlbumService.getAllAlbums().then((res) => { \n            this.setState({ albums: res.data }); \n        }); \n    }\n\n    render() {\n        return (\n            <div>\n                <h2 className=\"text-center\">List of Albums</h2>\n                <div className=\"row\">\n                    <button className=\"btn btn-primary\" onClick={this.addAlbum}>Add Album</button>\n                </div>\n                <br></br>\n                <div className=\"row\">\n                    <table className=\"table table-striped table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>Album Name</th>\n                                <th>Artist Name</th>\n                                <th>Genre</th>\n                                <th>Release Year</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.albums.map(\n                                    album =>\n                                    <tr key={album.id}>\n                                        <td>{album.albumName}</td>\n                                        <td>{album.artistName}</td>\n                                        <td>{album.genre}</td>\n                                        <td>{album.releaseYear}</td>\n                                        <td>\n                                            <button onClick={ () => this.editAlbum(album.id)} className=\"btn btn-info\">Update</button>\n                                            <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteAlbum(album.id)} className=\"btn btn-danger\">Delete</button>\n                                            <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewAlbum(album.id)} className=\"btn btn-info\">View</button>\n                                        </td>\n                                    </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default ListAlbumComponent","import React, { Component } from 'react'\n\nclass HeaderComponent extends Component {\n    constructor(props) {\n        super(props) \n\n        this.state = {}\n\n    }\n\n    render() {\n        return (\n            <div>\n                <header>\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                        <div><a href=\"/crud-frontend/\" className=\"navbar-brand\">Album Management App</a></div> \n                    </nav>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default HeaderComponent","import React, { Component } from 'react'\n\nclass FooterComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {} \n    }\n\n    render() {\n        return (\n            <div>\n                <footer className=\"footer\">\n                    <span className=\"text-muted\">All Rights Reserved 2020 T-Bone Bielarski</span>\n                </footer>\n            </div>\n        )\n    }\n}\n\n\n\nexport default FooterComponent","/* SHOULD ALBUMID REFERENCED BELOW INSTEAD BE JUST 'ID'?????????????????? */\n\nimport React, { Component } from 'react'\nimport AlbumService from '../services/AlbumService'; \n\nclass CreateAlbumComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id, \n            albumName: '', \n            artistName: '', \n            genre: '', \n            releaseYear: ''\n        }\n\n        this.changeAlbumNameHandler = this.changeAlbumNameHandler.bind(this); \n        this.changeArtistNameHandler = this.changeArtistNameHandler.bind(this); \n        this.changeGenreHandler = this.changeGenreHandler.bind(this); \n        this.changeReleaseYearHandler = this.changeReleaseYearHandler.bind(this); \n        this.saveOrUpdateAlbum = this.saveOrUpdateAlbum.bind(this); \n    }\n\n    componentDidMount() {\n        if (this.state.id === '_add') { \n            return\n        } else {\n            AlbumService.getAlbumById(this.state.id).then( (res) => {\n                let album = res.data; \n                this.setState({\n                    albumName: album.albumName, \n                    artistName: album.artistName, \n                    genre: album.genre, \n                    releaseYear: album.releaseYear\n                }); \n            }); \n        }\n    }\n\n    saveOrUpdateAlbum = (e) => {\n        e.preventDefault(); \n        let album = { albumName: this.state.albumName, artistName: this.state.artistName, genre: this.state.genre, releaseYear: this.state.releaseYear }; \n        console.log('album => ' + JSON.stringify(album)); \n\n        if (this.state.id === '_add') {\n            AlbumService.addAlbum(album).then( res => {\n                this.props.history.push('/crud-frontend/albums'); \n            }); \n        } else {\n            AlbumService.updateAlbum(album, this.state.id).then( res => {\n                this.props.history.push('/crud-frontend/albums'); \n            }); \n        }\n    }\n\n    changeAlbumNameHandler = (event) => {\n        this.setState({albumName: event.target.value}); \n    }\n\n    changeArtistNameHandler = (event) => {\n        this.setState({artistName: event.target.value}); \n    }\n\n    changeGenreHandler = (event) => {\n        this.setState({genre: event.target.value}); \n    }\n\n    changeReleaseYearHandler = (event) => {\n        this.setState({releaseYear: event.target.value}); \n    }\n\n    cancel() {\n        this.props.history.push('/crud-frontend/albums'); \n    }\n\n    getTitle() {\n        if (this.state.id === '_add') {\n            return <h3 className=\"text-center\">Add Album</h3>\n        } else {\n            return <h3 className=\"text-center\">Update Album</h3>\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <br></br>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"card col-md-6 offset-md-3\">\n                            {\n                                this.getTitle()\n                            }\n                            <div className=\"card-body\">\n                                <form>\n                                    <div className=\"form-group\">\n                                        <label>Album Name: </label>\n                                        <input placeholder=\"Album Name\" name=\"albumName\" className=\"form-control\" value={this.state.albumName} onChange={this.changeAlbumNameHandler}/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Artist Name: </label>\n                                        <input placeholder=\"Artist Name\" name=\"artistName\" className=\"form-control\" value={this.state.artistName} onChange={this.changeArtistNameHandler}/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Genre: </label>\n                                        <input placeholder=\"Genre\" name=\"genre\" className=\"form-control\" value={this.state.genre} onChange={this.changeGenreHandler}/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Release Year: </label>\n                                        <input placeholder=\"Release Year\" name=\"releaseYear\" className=\"form-control\" value={this.state.releaseYear} onChange={this.changeReleaseYearHandler}/>\n                                    </div>\n\n                                    <button className=\"btn btn-success\" onClick={this.saveOrUpdateAlbum}>Save</button>\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateAlbumComponent","import React, { Component } from 'react'\nimport AlbumService from '../services/AlbumService'\n\nclass ViewAlbumComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            albumId: this.props.match.params.albumId, \n            album: {}\n        }\n    }\n\n    componentDidMount() {\n        AlbumService.getAlbumById(this.state.albumId).then( res => {\n            this.setState({album: res.data}); \n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <br></br>\n                <div className=\"card col-md-6 offset-md-3\">\n                    <h3 className=\"text-center\">View Album Details</h3>\n                    <div className=\"card-body\">\n                        <div className=\"row\">\n                            <label>Album Name: </label>\n                            <div>{ this.state.album.albumName }</div>\n                        </div>\n                        <div className=\"row\">\n                            <label>Artist Name: </label>\n                            <div>{ this.state.album.artistName }</div>\n                        </div>\n                        <div className=\"row\">\n                            <label>Genre: </label>\n                            <div>{ this.state.album.genre }</div>\n                        </div>\n                        <div className=\"row\">\n                            <label>Release Year: </label>\n                            <div>{ this.state.album.releaseYear }</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ViewAlbumComponent","import React from 'react'; \nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; \nimport ListAlbumComponent from './components/ListAlbumComponent'; \nimport HeaderComponent from './components/HeaderComponent'; \nimport FooterComponent from './components/FooterComponent'; \nimport CreateAlbumComponent from './components/CreateAlbumComponent'; \nimport ViewAlbumComponent from './components/ViewAlbumComponent'; \n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <HeaderComponent/>\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/crud-frontend/\" exact component={ListAlbumComponent}></Route>\n            <Route path=\"/crud-frontend/albums\" exact component={ListAlbumComponent}></Route>\n            <Route path=\"/crud-frontend/add-album/:id\" exact component={CreateAlbumComponent}></Route>\n            <Route path=\"/crud-frontend/view-album/:id\" exact component={ViewAlbumComponent}></Route>\n          </Switch>\n        </div>\n        <FooterComponent/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// SERVICE WORKER??? \nimport 'bootstrap/dist/css/bootstrap.min.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}